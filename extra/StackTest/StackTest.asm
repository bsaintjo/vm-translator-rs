// Push(Constant, 17)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 17)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// equal
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JEQ1
D;JEQ
@0
D=A
@SP
A=M
M=D
@AFTER1
0;JMP
(JEQ1)
@0
D=A
@SP
A=M
M=D-1
(AFTER1)
@SP
M=M+1
// Push(Constant, 17)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 16)
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// equal
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JEQ2
D;JEQ
@0
D=A
@SP
A=M
M=D
@AFTER2
0;JMP
(JEQ2)
@0
D=A
@SP
A=M
M=D-1
(AFTER2)
@SP
M=M+1
// Push(Constant, 16)
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 17)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// equal
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JEQ3
D;JEQ
@0
D=A
@SP
A=M
M=D
@AFTER3
0;JMP
(JEQ3)
@0
D=A
@SP
A=M
M=D-1
(AFTER3)
@SP
M=M+1
// Push(Constant, 892)
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 891)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// less than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JGT4
D;JGT
@0
D=A
@SP
A=M
M=D
@AFTER4
0;JMP
(JGT4)
@0
D=A
@SP
A=M
M=D-1
(AFTER4)
@SP
M=M+1
// Push(Constant, 891)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 892)
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// less than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JGT5
D;JGT
@0
D=A
@SP
A=M
M=D
@AFTER5
0;JMP
(JGT5)
@0
D=A
@SP
A=M
M=D-1
(AFTER5)
@SP
M=M+1
// Push(Constant, 891)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 891)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// less than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JGT6
D;JGT
@0
D=A
@SP
A=M
M=D
@AFTER6
0;JMP
(JGT6)
@0
D=A
@SP
A=M
M=D-1
(AFTER6)
@SP
M=M+1
// Push(Constant, 32767)
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 32766)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// greater than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JLT7
D;JLT
@0
D=A
@SP
A=M
M=D
@AFTER7
0;JMP
(JLT7)
@0
D=A
@SP
A=M
M=D-1
(AFTER7)
@SP
M=M+1
// Push(Constant, 32766)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 32767)
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// greater than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JLT8
D;JLT
@0
D=A
@SP
A=M
M=D
@AFTER8
0;JMP
(JLT8)
@0
D=A
@SP
A=M
M=D-1
(AFTER8)
@SP
M=M+1
// Push(Constant, 32766)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 32766)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// greater than
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D-M
@JLT9
D;JLT
@0
D=A
@SP
A=M
M=D
@AFTER9
0;JMP
(JLT9)
@0
D=A
@SP
A=M
M=D-1
(AFTER9)
@SP
M=M+1
// Push(Constant, 57)
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 31)
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 53)
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// addition
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 112)
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// subtract
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// negation
// Unary -M
@SP
M=M-1
A=M
M=-M
@SP
M=M+1
// and cmd
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D&M
@SP
A=M
M=D
@SP
M=M+1
// Push(Constant, 82)
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or cmd
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D|M
@SP
A=M
M=D
@SP
M=M+1
// not
// Unary !M
@SP
M=M-1
A=M
M=!M
@SP
M=M+1
(END)
@END
0;JMP
